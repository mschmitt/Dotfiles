# Skip if running non-interactively
if [[ ! -t 0 ]]
then
        return
fi

# Don't do this if already on an SSH connection
if [[ ! -z "$SSH_CONNECTION" ]]
then
	return
fi

# ssh-add / bootstrap ssh-agent as needed
ssh-add -l >/dev/null 2>&1 
case $? in
	0)	
		# ssh-agent is loaded with identities; do nothing
		return
		;;
	1) 
		# ssh-agent is reachable but without identities
		ssh-add
		return
		;;
esac

# Bootstrap SSH-Agent where there is no global ssh-agent started
#
# This is my ssh-agent-bootstrap method, optimized for frequent execution
# by removing qualitative agent state checks.

# Non-default socket for the SSH agent
MY_SSH_AGENT_SOCKET=~/.ssh/agent.socket
# File that will contain the autogenerated SSH environment
MY_SSH_AGENT_ENV=~/.ssh/agent.env
 
# Source the existing environment if it exists
test -s $MY_SSH_AGENT_ENV && source $MY_SSH_AGENT_ENV > /dev/null
 
# Send signal zero to check whether the agent is running.
kill -0 $SSH_AGENT_PID >/dev/null 2>&1
if [[ $? -ne 0 ]] 
then
	# Could not send signal. Agent is not running. Start it.
	rm -f $MY_SSH_AGENT_SOCKET
	ssh-agent -a $MY_SSH_AGENT_SOCKET > $MY_SSH_AGENT_ENV.new && mv $MY_SSH_AGENT_ENV.new $MY_SSH_AGENT_ENV
	# Source environment again to catch the new PID.
	source $MY_SSH_AGENT_ENV  > /dev/null
	echo "*** Started SSH agent (pid $SSH_AGENT_PID)."
	ssh-add
fi
