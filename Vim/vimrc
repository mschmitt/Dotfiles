" Recommended reading:
"
" http://vimdoc.sourceforge.net/htmldoc/usr_toc.html
" http://vim.wikia.com/wiki/Modeline_magic
" https://sanctum.geek.nz/arabesque/gracefully-degrading-vimrc/

" Name of this file:
"
" ~/.vimrc		(UNIX)
" %userprofile%\_vimrc  (Windows)

" Use Vim defaults instead of 100% vi compatibility
set nocompatible		

" same as ":set backspace=indent,eol,start"
set backspace=2			

" Don't write backup file if vim is being called by "crontab -e" (MacOS):
au BufWrite /private/tmp/crontab.* set nowritebackup
" Same on Linux:
au BufWrite /tmp/crontab.* set nowritebackup
" visudo:
au BufWrite /etc/sudoers.tmp set nowritebackup

colorscheme default

" Skeletons http://vimdoc.sourceforge.net/htmldoc/autocmd.html#skeleton
autocmd BufNewFile *\.txt   r ~/.vim/skeleton/txt
autocmd BufNewFile *\.pl   0r ~/.vim/skeleton/pl

" Always show coordinates
set ruler			

set autoindent            

" Ignore case when searching
set ignorecase             	

" Enable syntax highlighting
syntax on			

" http://vimdoc.sourceforge.net/htmldoc/filetype.html
filetype plugin indent on  	
"let perl_fold=1            	" Activate autofolding in the Perl ftplugin
"let perl_fold_blocks=1

" Typ :nohls to un-higlight
set hlsearch               	

" Number of spaces to use for each step of (auto)indent.
set shiftwidth=8 		
" Number of spaces that a <Tab> in the file counts for.
set tabstop=8			

" Vim default: on (off for root)
set modeline			
" number of lines that is checked for set commands.
set modelines=5			

" gnupg.vim
let g:GPGPreferArmor=1 		
let g:GPGDefaultRecipients=[ '79F95F49DF236BA4' ]

" Fail silently if pathogen not installed
silent! execute pathogen#infect() 

" Asynchronous Lint Engine
" let g:ale_sign_column_always = 1

" GUI settings
if has('gui_macvim')
	set guifont=Monaco:h14
endif
if has('gui_win32') || has('gui_win64')
	set guifont=Consolas:h14
endif
set guioptions=Tr		" (T) Toolbar on, (r) scrollbar always on

" lightline.vim
if match(&runtimepath, 'lightline.vim') == -1
	" lightline.vim seems not to be loaded.
	" Show INSERT/REPLACE/...
	set showmode
	set laststatus=1
else
	set noshowmode
	set laststatus=2
	" Configure lightline
	let g:lightline = { 'colorscheme': 'PaperColor' }
	" force colour (for lightline) even if TERM=xterm
	set t_Co=256
endif

" Buffer navigation with Ctrl+cursor https://vi.stackexchange.com/q/2129
map <C-J> :bprev<CR>
map <C-K> :bnext<CR>
map <C-H> :brewind<CR>
map <C-L> :blast<CR>

" When editing a file, always jump to the last known cursor position.
" Don't do it when the position is invalid or when inside an event handler
" (happens when dropping a file on gvim).
autocmd BufReadPost *
	\ if line("'\"") >= 1 && line("'\"") <= line("$") |
	\   exe "normal! g`\"" |
	\ endif
